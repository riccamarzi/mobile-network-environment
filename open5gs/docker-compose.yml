version: '3.9'
services:
        mongo:
                image: mongo:4
                container_name: mongo
                healthcheck:
                        test: ["CMD", "mongo", "mongodb://127.0.0.1"]
                        interval: 5s
                        timeout: 5s       
                env_file:
                        - .env
                networks:
                        appnet:
                                ipv4_address: ${MONGO_IP}
        ########## OPEN5GS ########################
        open5gs_hss: 
                build: ./open5gs
                image: open5gs_docker
                container_name: open5gs_hss
                tty: true
                stdin_open: true
                expose:
                        - "3868/tcp"
                        - "3868/udp"
                depends_on:
                       mongo:
                               condition: service_healthy
                environment:
                        - OPEN5GS_COMPONENT=hss
                volumes: 
                        - ./open5gs/hss:/mnt
                env_file:
                        - .env
                networks:
                        appnet:
                                ipv4_address: ${HSS_IP}
                                aliases:
                                        - hss
                                        - hss.ims.mnc001.mcc001.3gppnetwork.org
                                        - hss.epc.mnc001.mcc001.3gppnetwork.org
                                        - hss.open-ims.test
        open5gs_mme:
                image: open5gs_docker
                container_name: open5gs_mme
                tty: true
                stdin_open: true
                volumes:
                        - ./open5gs/mme:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=mme
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_MME_IP}
        open5gs_sgwc:
                image: open5gs_docker
                container_name: open5gs_sgwc
                tty: true
                stdin_open: true
                volumes:
                        - ./open5gs/sgwc:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=sgwc
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_SGWC_IP}
        open5gs_sgwu:
                image: open5gs_docker
                container_name: open5gs_sgwu
                tty: true
                stdin_open: true
                volumes:
                        - ./open5gs/sgwu:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=sgwu
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_SGWU_IP}
        open5gs_smf:
                image: open5gs_docker
                container_name: open5gs_smf
                tty: true
                stdin_open: true
                volumes:
                        - ./open5gs/smf:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=smf
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_SMF_IP}
                                aliases:
                                        - smf.epc.mnc001.mcc001.3gppnetwork.org
        open5gs_upf:
                image: open5gs_docker
                container_name: open5gs_upf
                cap_add:
                        - NET_ADMIN
                privileged: true
                sysctls:
                        - net.ipv4.ip_forward=1
                tty: true
                stdin_open: true
                volumes:
                        - ./open5gs/upf:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=upf
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_UPF_IP}
        open5gs_amf:
                image: open5gs_docker
                container_name: open5gs_amf
                tty: true
                stdin_open: true
                volumes:
                        - ./open5gs/amf:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=amf
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_AMF_IP}
        open5gs_pcrf:
                image: open5gs_docker
                container_name: open5gs_pcrf
                tty: true
                stdin_open: true
                volumes:
                        - ./open5gs/pcrf:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=pcrf
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_PCRF_IP}
                                aliases:
                                        - pcrf.epc.mnc001.mcc001.3gppnetwork.org
        open5gs_nrf:
                image: open5gs_docker
                container_name: open5gs_nrf
                volumes: 
                        - ./open5gs/nrf:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=nrf
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_NRF_IP}
        open5gs_ausf:
                image: open5gs_docker
                container_name: open5gs_ausf
                volumes: 
                        - ./open5gs/ausf:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=ausf
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_AUSF_IP}
        open5gs_udm:
                image: open5gs_docker
                container_name: open5gs_udm
                volumes: 
                        - ./open5gs/udm:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=udm
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_UDM_IP}
        open5gs_pcf:
                image: open5gs_docker
                container_name: open5gs_pcf
                volumes: 
                        - ./open5gs/pcf:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=pcf
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_PCF_IP}
        open5gs_nssf:
                image: open5gs_docker
                container_name: open5gs_nssf
                volumes: 
                        - ./open5gs/nssf:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=nssf
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_NSSF_IP}
        open5gs_bsf:
                image: open5gs_docker
                container_name: open5gs_bsf
                volumes: 
                        - ./open5gs/bsf:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=bsf
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_BSF_IP}
        open5gs_udr:
                image: open5gs_docker
                container_name: open5gs_udr
                volumes: 
                        - ./open5gs/udr:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=udr
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_UDR_IP}
        open5gs_webui:
                image: open5gs_docker
                container_name: open5gs_webui
                expose:
                        - "3000/tcp"
                ports:
                        - "3000:3000/tcp"
                volumes: 
                        - ./open5gs/webui:/mnt
                depends_on:
                        - open5gs_hss
                env_file:
                        - .env
                environment:
                        - OPEN5GS_COMPONENT=webui
                networks:
                        appnet:
                                ipv4_address: ${OPEN5GS_WEBUI_IP}
        ############## END OPEN5GS ###############
networks:
        appnet:
                #driver: bridge
                ipam: 
                #driver: default
                        config:
                                - subnet: ${NETWORK_SUBNET}
        uenet:
                ipam:
                        config:
                                - subnet: ${TUN_SUBNET_IV}
